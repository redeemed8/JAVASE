package NetCoding.TCP;

public class Detail {
    public static void main(String[] args) {

        //  osi参考模型
        //  应用层-> 表示层 -> 会话层 -> 传输层 -> 网络层 -> 数据链路层 -> 物理层

        //  改进为：应用层(应用层-> 表示层 -> 会话层) -> 传输层 -> 网络层 -> 物理+数据链路层
        //  应用层：一般在这一层开发代码
        //  传输层：选择传输协议 TCP  UDP ....
        //  网络层：封装自己的IP，对方的 IP 等信息
        //  物理+数据链路层：转换成二进制利用物理设备传输

        //  三次握手协议 保证连接建立
        //  首先：客户端向服务器发出连接请求，等待服务器确认
        //  其次，服务器向客户端返回一个相应
        //       告诉客户端收到了请求
        //  最后，客户端向服务器再次发出确认信息，连接建立


        //  四次挥手协议，确保连接断开
        //  而且保证连接通道里面的数据已经处理完毕了
        //  1. 客户端向服务器发出取消连接请求
        //  2. 服务器向客户端返回一个响应
        //  3. 待服务器将最后的数据处理完毕后，服务器向客户端发出确认取消信息
        //  4. 客户端再次发送确认消息，连接取消

    }
}
